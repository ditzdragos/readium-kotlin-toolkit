{"version":3,"file":"prepaginated-double-script.js","mappings":"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","sources":["webpack://readium-js/./src/prepaginated/page-manager.ts","webpack://readium-js/./src/prepaginated/viewport.ts","webpack://readium-js/./src/prepaginated/double-area-manager.ts","webpack://readium-js/./src/prepaginated/fit.ts","webpack://readium-js/./src/index-prepaginated-double.ts"],"sourcesContent":["/** Manages a fixed layout resource embedded in an iframe. */\nexport class PageManager {\n    constructor(iframe, listener) {\n        this.margins = { top: 0, right: 0, bottom: 0, left: 0 };\n        if (!iframe.contentWindow) {\n            throw Error(\"Iframe argument must have been attached to DOM.\");\n        }\n        this.listener = listener;\n        this.iframe = iframe;\n        this.iframe.addEventListener(\"load\", () => { this.onIframeLoaded(); });\n    }\n    show() {\n        this.iframe.style.display = \"unset\";\n    }\n    hide() {\n        this.iframe.style.display = \"none\";\n    }\n    /** Sets page margins. */\n    setMargins(margins) {\n        if (this.margins == margins) {\n            return;\n        }\n        this.iframe.style.marginTop = this.margins.top + \"px\";\n        this.iframe.style.marginLeft = this.margins.left + \"px\";\n        this.iframe.style.marginBottom = this.margins.bottom + \"px\";\n        this.iframe.style.marginRight = this.margins.right + \"px\";\n    }\n    /** Loads page content. */\n    loadPage(url) {\n        this.iframe.src = url;\n    }\n    onIframeLoaded() {\n        const viewport = this.iframe.contentWindow.document.querySelector(\"meta[name=viewport]\");\n        if (viewport instanceof HTMLMetaElement) {\n            return;\n        }\n        const pageSize = this.parsePageSize(viewport);\n        if (!pageSize) {\n            //FIXME: handle edge case\n            return;\n        }\n        this.iframe.style.width = pageSize.width + \"px\";\n        this.iframe.style.height = pageSize.height + \"px\";\n        this.size = pageSize;\n        this.listener.onIframeLoaded();\n    }\n    /** Parses the page size from the viewport meta tag of the loaded resource. */\n    parsePageSize(viewportMeta) {\n        const regex = /(\\w+) *= *([^\\s,]+)/g;\n        const properties = new Map();\n        let match;\n        while ((match = regex.exec(viewportMeta.content))) {\n            if (match != null) {\n                properties.set(match[1], match[2]);\n            }\n        }\n        const width = parseFloat(properties.get(\"width\"));\n        const height = parseFloat(properties.get(\"height\"));\n        if (width && height) {\n            return { width, height };\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n","export class ViewportStringBuilder {\n    setInitialScale(scale) {\n        this.initialScale = scale;\n        return this;\n    }\n    setMinimumScale(scale) {\n        this.minimumScale = scale;\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    build() {\n        const components = [];\n        if (this.initialScale) {\n            components.push(\"initial-scale=\" + this.initialScale);\n        }\n        if (this.minimumScale) {\n            components.push(\"minimum-scale=\" + this.minimumScale);\n        }\n        if (this.width) {\n            components.push(\"width=\" + this.width);\n        }\n        if (this.height) {\n            components.push(\"height=\" + this.height);\n        }\n        return components.join(\", \");\n    }\n}\n","import { computeScale } from \"./fit\";\nimport { PageManager } from \"./page-manager\";\nimport { ViewportStringBuilder } from \"./viewport\";\nexport class DoubleAreaManager {\n    constructor(leftIframe, rightIframe, metaViewport) {\n        this.fit = \"contain\" /* Fit.Contain */;\n        this.insets = { top: 0, right: 0, bottom: 0, left: 0 };\n        const listener = { onIframeLoaded: () => { this.layout(); } };\n        this.leftPage = new PageManager(leftIframe, listener);\n        this.rightPage = new PageManager(rightIframe, listener);\n        this.metaViewport = metaViewport;\n    }\n    loadSpread(spread) {\n        this.leftPage.hide();\n        this.rightPage.hide();\n        if (spread.left) {\n            this.leftPage.loadPage(spread.left);\n        }\n        if (spread.right) {\n            this.rightPage.loadPage(spread.right);\n        }\n    }\n    setViewport(size, insets) {\n        if (this.viewport == size && this.insets == insets) {\n            return;\n        }\n        this.viewport = size;\n        this.insets = insets;\n        this.layout();\n    }\n    setFit(fit) {\n        if (this.fit == fit) {\n            return;\n        }\n        this.fit = fit;\n        this.layout();\n    }\n    layout() {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (!this.viewport || (!this.leftPage.size && !this.rightPage.size)) {\n            return;\n        }\n        const leftMargins = { top: this.insets.top, right: 0, bottom: this.insets.bottom, left: this.insets.left };\n        this.leftPage.setMargins(leftMargins);\n        const rightMargins = { top: this.insets.top, right: this.insets.right, bottom: this.insets.bottom, left: 0 };\n        this.rightPage.setMargins(rightMargins);\n        const contentWidth = ((_b = (_a = this.leftPage.size) === null || _a === void 0 ? void 0 : _a.width) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = this.rightPage.size) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : 0);\n        const contentHeight = Math.max((_f = (_e = this.leftPage.size) === null || _e === void 0 ? void 0 : _e.height) !== null && _f !== void 0 ? _f : 0, (_h = (_g = this.rightPage.size) === null || _g === void 0 ? void 0 : _g.height) !== null && _h !== void 0 ? _h : 0);\n        const contentSize = { width: contentWidth, height: contentHeight };\n        const scale = computeScale(this.fit, contentSize, this.viewport);\n        this.metaViewport.content = new ViewportStringBuilder()\n            .setInitialScale(scale)\n            .setMinimumScale(scale)\n            .setWidth(contentWidth)\n            .setHeight(contentHeight)\n            .build();\n        this.leftPage.show();\n        this.rightPage.show();\n    }\n}\n","export function computeScale(fit, content, container) {\n    switch (fit) {\n        case \"contain\" /* Fit.Contain */:\n            return fitContain(content, container);\n        case \"width\" /* Fit.Width */:\n            return fitWidth(content, container);\n        case \"height\" /* Fit.Height */:\n            return fitHeight(content, container);\n    }\n}\nfunction fitContain(content, container) {\n    const widthRatio = container.width / content.width;\n    const heightRatio = container.height / content.height;\n    return Math.min(widthRatio, heightRatio);\n}\nfunction fitWidth(content, container) {\n    return container.width / content.width;\n}\nfunction fitHeight(content, container) {\n    return container.height / content.height;\n}\n","//\n//  Copyright 2021 Readium Foundation. All rights reserved.\n//  Use of this source code is governed by the BSD-style license\n//  available in the top-level LICENSE file of the project.\n//\nimport { DoubleAreaManager } from \"./prepaginated/double-area-manager\";\nvar Layout;\n(function (Layout) {\n    const leftIframe = document.getElementById(\"page-left\");\n    const rightIframe = document.getElementById(\"page-right\");\n    const metaViewport = document.querySelector(\"meta[name=viewport]\");\n    const manager = new DoubleAreaManager(leftIframe, rightIframe, metaViewport);\n    function loadSpread(spread) {\n        manager.loadSpread(spread);\n    }\n    Layout.loadSpread = loadSpread;\n    function setViewport(viewporttWidth, viewportHeight, insetTop, insetLeft, insetBottom, insetRight) {\n        let viewport = { width: viewporttWidth, height: viewportHeight };\n        let insets = { top: insetTop, left: insetLeft, bottom: insetBottom, right: insetRight };\n        manager.setViewport(viewport, insets);\n    }\n    Layout.setViewport = setViewport;\n    function setFit(fit) {\n        if (fit != \"contain\" && fit != \"width\" && fit != \"height\") {\n            throw Error(`Invalid fit value: ${fit}`);\n        }\n        manager.setFit(fit);\n    }\n    Layout.setFit = setFit;\n})(Layout || (Layout = {}));\nWindow.prototype.layout = Layout;\n"],"names":["PageManager","constructor","iframe","listener","this","margins","top","right","bottom","left","contentWindow","Error","addEventListener","onIframeLoaded","show","style","display","hide","setMargins","marginTop","marginLeft","marginBottom","marginRight","loadPage","url","src","viewport","document","querySelector","HTMLMetaElement","pageSize","parsePageSize","width","height","size","viewportMeta","regex","properties","Map","match","exec","content","set","parseFloat","get","ViewportStringBuilder","setInitialScale","scale","initialScale","setMinimumScale","minimumScale","setWidth","setHeight","build","components","push","join","DoubleAreaManager","leftIframe","rightIframe","metaViewport","fit","insets","layout","leftPage","rightPage","loadSpread","spread","setViewport","setFit","_a","_b","_c","_d","_e","_f","_g","_h","leftMargins","rightMargins","contentWidth","contentHeight","Math","max","contentSize","container","widthRatio","heightRatio","min","fitContain","fitWidth","fitHeight","computeScale","Layout","getElementById","manager","viewporttWidth","viewportHeight","insetTop","insetLeft","insetBottom","insetRight","Window","prototype"],"sourceRoot":""}