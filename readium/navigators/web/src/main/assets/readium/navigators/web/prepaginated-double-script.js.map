{"version":3,"file":"prepaginated-double-script.js","mappings":"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","sources":["webpack://readium-js/./src/prepaginated/page-manager.ts","webpack://readium-js/./src/util/viewport.ts","webpack://readium-js/./src/prepaginated/double-area-manager.ts","webpack://readium-js/./src/util/fit.ts","webpack://readium-js/./src/index-prepaginated-double.ts"],"sourcesContent":["/** Manages a fixed layout resource embedded in an iframe. */\nexport class PageManager {\n    constructor(iframe, listener) {\n        this.margins = { top: 0, right: 0, bottom: 0, left: 0 };\n        if (!iframe.contentWindow) {\n            throw Error(\"Iframe argument must have been attached to DOM.\");\n        }\n        this.listener = listener;\n        this.iframe = iframe;\n        this.iframe.addEventListener(\"load\", () => {\n            this.onIframeLoaded();\n        });\n    }\n    show() {\n        this.iframe.style.display = \"unset\";\n    }\n    hide() {\n        this.iframe.style.display = \"none\";\n    }\n    /** Sets page margins. */\n    setMargins(margins) {\n        if (this.margins == margins) {\n            return;\n        }\n        this.iframe.style.marginTop = this.margins.top + \"px\";\n        this.iframe.style.marginLeft = this.margins.left + \"px\";\n        this.iframe.style.marginBottom = this.margins.bottom + \"px\";\n        this.iframe.style.marginRight = this.margins.right + \"px\";\n    }\n    /** Loads page content. */\n    loadPage(url) {\n        this.iframe.src = url;\n    }\n    /** Sets the size of this page without content. */\n    setPlaceholder(size) {\n        this.iframe.style.width = size.width + \"px\";\n        this.iframe.style.height = size.height + \"px\";\n        this.size = size;\n    }\n    onIframeLoaded() {\n        const viewport = this.iframe.contentWindow.document.querySelector(\"meta[name=viewport]\");\n        if (!viewport || viewport instanceof HTMLMetaElement) {\n            //FIXME: handle edge case\n            return;\n        }\n        const pageSize = this.parsePageSize(viewport);\n        if (!pageSize) {\n            //FIXME: handle edge case\n            return;\n        }\n        this.iframe.style.width = pageSize.width + \"px\";\n        this.iframe.style.height = pageSize.height + \"px\";\n        this.size = pageSize;\n        this.listener.onIframeLoaded();\n    }\n    /** Parses the page size from the viewport meta tag of the loaded resource. */\n    parsePageSize(viewportMeta) {\n        const regex = /(\\w+) *= *([^\\s,]+)/g;\n        const properties = new Map();\n        let match;\n        while ((match = regex.exec(viewportMeta.content))) {\n            if (match != null) {\n                properties.set(match[1], match[2]);\n            }\n        }\n        const width = parseFloat(properties.get(\"width\"));\n        const height = parseFloat(properties.get(\"height\"));\n        if (width && height) {\n            return { width, height };\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n","export class ViewportStringBuilder {\n    setInitialScale(scale) {\n        this.initialScale = scale;\n        return this;\n    }\n    setMinimumScale(scale) {\n        this.minimumScale = scale;\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    build() {\n        const components = [];\n        if (this.initialScale) {\n            components.push(\"initial-scale=\" + this.initialScale);\n        }\n        if (this.minimumScale) {\n            components.push(\"minimum-scale=\" + this.minimumScale);\n        }\n        if (this.width) {\n            components.push(\"width=\" + this.width);\n        }\n        if (this.height) {\n            components.push(\"height=\" + this.height);\n        }\n        return components.join(\", \");\n    }\n}\n","import { computeScale } from \"../util/fit\";\nimport { PageManager } from \"./page-manager\";\nimport { ViewportStringBuilder } from \"../util/viewport\";\nexport class DoubleAreaManager {\n    constructor(leftIframe, rightIframe, metaViewport) {\n        this.fit = \"contain\" /* Fit.Contain */;\n        this.insets = { top: 0, right: 0, bottom: 0, left: 0 };\n        const listener = {\n            onIframeLoaded: () => {\n                this.layout();\n            },\n        };\n        this.leftPage = new PageManager(leftIframe, listener);\n        this.rightPage = new PageManager(rightIframe, listener);\n        this.metaViewport = metaViewport;\n    }\n    loadSpread(spread) {\n        this.leftPage.hide();\n        this.rightPage.hide();\n        this.spread = spread;\n        if (spread.left) {\n            this.leftPage.loadPage(spread.left);\n        }\n        if (spread.right) {\n            this.rightPage.loadPage(spread.right);\n        }\n    }\n    setViewport(size, insets) {\n        if (this.viewport == size && this.insets == insets) {\n            return;\n        }\n        this.viewport = size;\n        this.insets = insets;\n        this.layout();\n    }\n    setFit(fit) {\n        if (this.fit == fit) {\n            return;\n        }\n        this.fit = fit;\n        this.layout();\n    }\n    layout() {\n        if (!this.viewport ||\n            (!this.leftPage.size && this.spread.left) ||\n            (!this.rightPage.size && this.spread.right)) {\n            return;\n        }\n        const leftMargins = {\n            top: this.insets.top,\n            right: 0,\n            bottom: this.insets.bottom,\n            left: this.insets.left,\n        };\n        this.leftPage.setMargins(leftMargins);\n        const rightMargins = {\n            top: this.insets.top,\n            right: this.insets.right,\n            bottom: this.insets.bottom,\n            left: 0,\n        };\n        this.rightPage.setMargins(rightMargins);\n        if (!this.spread.right) {\n            this.rightPage.setPlaceholder(this.leftPage.size);\n        }\n        else if (!this.spread.left) {\n            this.leftPage.setPlaceholder(this.rightPage.size);\n        }\n        const contentWidth = this.leftPage.size.width + this.rightPage.size.width;\n        const contentHeight = Math.max(this.leftPage.size.height, this.rightPage.size.height);\n        const contentSize = { width: contentWidth, height: contentHeight };\n        const safeDrawingSize = {\n            width: this.viewport.width - this.insets.left - this.insets.right,\n            height: this.viewport.height - this.insets.top - this.insets.bottom,\n        };\n        const scale = computeScale(this.fit, contentSize, safeDrawingSize);\n        this.metaViewport.content = new ViewportStringBuilder()\n            .setInitialScale(scale)\n            .setMinimumScale(scale)\n            .setWidth(contentWidth)\n            .setHeight(contentHeight)\n            .build();\n        this.leftPage.show();\n        this.rightPage.show();\n    }\n}\n","export function computeScale(fit, content, container) {\n    switch (fit) {\n        case \"contain\" /* Fit.Contain */:\n            return fitContain(content, container);\n        case \"width\" /* Fit.Width */:\n            return fitWidth(content, container);\n        case \"height\" /* Fit.Height */:\n            return fitHeight(content, container);\n    }\n}\nfunction fitContain(content, container) {\n    const widthRatio = container.width / content.width;\n    const heightRatio = container.height / content.height;\n    return Math.min(widthRatio, heightRatio);\n}\nfunction fitWidth(content, container) {\n    return container.width / content.width;\n}\nfunction fitHeight(content, container) {\n    return container.height / content.height;\n}\n","//\n//  Copyright 2021 Readium Foundation. All rights reserved.\n//  Use of this source code is governed by the BSD-style license\n//  available in the top-level LICENSE file of the project.\n//\nimport { DoubleAreaManager } from \"./prepaginated/double-area-manager\";\nvar Layout;\n(function (Layout) {\n    const leftIframe = document.getElementById(\"page-left\");\n    const rightIframe = document.getElementById(\"page-right\");\n    const metaViewport = document.querySelector(\"meta[name=viewport]\");\n    const manager = new DoubleAreaManager(leftIframe, rightIframe, metaViewport);\n    function loadSpread(spread) {\n        manager.loadSpread(spread);\n    }\n    Layout.loadSpread = loadSpread;\n    function setViewport(viewporttWidth, viewportHeight, insetTop, insetRight, insetBottom, insetLeft) {\n        const viewport = { width: viewporttWidth, height: viewportHeight };\n        const insets = {\n            top: insetTop,\n            left: insetLeft,\n            bottom: insetBottom,\n            right: insetRight,\n        };\n        manager.setViewport(viewport, insets);\n    }\n    Layout.setViewport = setViewport;\n    function setFit(fit) {\n        if (fit != \"contain\" && fit != \"width\" && fit != \"height\") {\n            throw Error(`Invalid fit value: ${fit}`);\n        }\n        manager.setFit(fit);\n    }\n    Layout.setFit = setFit;\n})(Layout || (Layout = {}));\nWindow.prototype.layout = Layout;\n"],"names":["PageManager","constructor","iframe","listener","this","margins","top","right","bottom","left","contentWindow","Error","addEventListener","onIframeLoaded","show","style","display","hide","setMargins","marginTop","marginLeft","marginBottom","marginRight","loadPage","url","src","setPlaceholder","size","width","height","viewport","document","querySelector","HTMLMetaElement","pageSize","parsePageSize","viewportMeta","regex","properties","Map","match","exec","content","set","parseFloat","get","ViewportStringBuilder","setInitialScale","scale","initialScale","setMinimumScale","minimumScale","setWidth","setHeight","build","components","push","join","DoubleAreaManager","leftIframe","rightIframe","metaViewport","fit","insets","layout","leftPage","rightPage","loadSpread","spread","setViewport","setFit","leftMargins","rightMargins","contentWidth","contentHeight","Math","max","contentSize","safeDrawingSize","container","widthRatio","heightRatio","min","fitContain","fitWidth","fitHeight","computeScale","Layout","getElementById","manager","viewporttWidth","viewportHeight","insetTop","insetRight","insetBottom","insetLeft","Window","prototype"],"sourceRoot":""}