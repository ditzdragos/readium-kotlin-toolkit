{"version":3,"file":"fixed-single-script.js","mappings":"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","sources":["webpack://readium-js/./src/fixed/page-manager.ts","webpack://readium-js/./src/util/viewport.ts","webpack://readium-js/./src/common/gestures.ts","webpack://readium-js/./src/fixed/single-area-manager.ts","webpack://readium-js/./src/util/fit.ts","webpack://readium-js/./src/bridge/fixed-gestures-bridge.ts","webpack://readium-js/./src/index-fixed-single.ts","webpack://readium-js/./src/bridge/fixed-single-bridge.ts"],"sourcesContent":["/** Manages a fixed layout resource embedded in an iframe. */\nexport class PageManager {\n    constructor(window, iframe, listener) {\n        this.margins = { top: 0, right: 0, bottom: 0, left: 0 };\n        this.channel = new MessageChannel();\n        if (!iframe.contentWindow) {\n            throw Error(\"Iframe argument must have been attached to DOM.\");\n        }\n        this.listener = listener;\n        this.iframe = iframe;\n        this.iframe.addEventListener(\"load\", () => {\n            this.onIframeLoaded();\n        });\n    }\n    show() {\n        this.iframe.style.display = \"unset\";\n    }\n    hide() {\n        this.iframe.style.display = \"none\";\n    }\n    /** Sets page margins. */\n    setMargins(margins) {\n        if (this.margins == margins) {\n            return;\n        }\n        this.iframe.style.marginTop = this.margins.top + \"px\";\n        this.iframe.style.marginLeft = this.margins.left + \"px\";\n        this.iframe.style.marginBottom = this.margins.bottom + \"px\";\n        this.iframe.style.marginRight = this.margins.right + \"px\";\n    }\n    /** Loads page content. */\n    loadPage(url) {\n        this.iframe.src = url;\n    }\n    /** Sets the size of this page without content. */\n    setPlaceholder(size) {\n        this.iframe.style.width = size.width + \"px\";\n        this.iframe.style.height = size.height + \"px\";\n        this.size = size;\n    }\n    onIframeLoaded() {\n        const viewport = this.iframe.contentWindow.document.querySelector(\"meta[name=viewport]\");\n        if (!viewport || viewport instanceof HTMLMetaElement) {\n            //FIXME: handle edge case\n            return;\n        }\n        const pageSize = this.parsePageSize(viewport);\n        if (!pageSize) {\n            //FIXME: handle edge case\n            return;\n        }\n        this.iframe.style.width = pageSize.width + \"px\";\n        this.iframe.style.height = pageSize.height + \"px\";\n        this.size = pageSize;\n        this.channel.port1.onmessage = (message) => {\n            console.log(`onmessage ${message}`);\n            this.onMessageFromIframe(message);\n        };\n        this.iframe.contentWindow.postMessage(\"Init\", \"*\", [this.channel.port2]);\n        this.listener.onIframeLoaded();\n    }\n    onMessageFromIframe(message) {\n        if (message.data.x && message.data.y) {\n            this.listener.onTap({ x: message.data.x, y: message.data.y });\n        }\n        else if (message.data.href) {\n            this.listener.onLinkActivated(message.data.href);\n        }\n    }\n    /** Parses the page size from the viewport meta tag of the loaded resource. */\n    parsePageSize(viewportMeta) {\n        const regex = /(\\w+) *= *([^\\s,]+)/g;\n        const properties = new Map();\n        let match;\n        while ((match = regex.exec(viewportMeta.content))) {\n            if (match != null) {\n                properties.set(match[1], match[2]);\n            }\n        }\n        const width = parseFloat(properties.get(\"width\"));\n        const height = parseFloat(properties.get(\"height\"));\n        if (width && height) {\n            return { width, height };\n        }\n        else {\n            return undefined;\n        }\n    }\n}\n","export class ViewportStringBuilder {\n    setInitialScale(scale) {\n        this.initialScale = scale;\n        return this;\n    }\n    setMinimumScale(scale) {\n        this.minimumScale = scale;\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    build() {\n        const components = [];\n        if (this.initialScale) {\n            components.push(\"initial-scale=\" + this.initialScale);\n        }\n        if (this.minimumScale) {\n            components.push(\"minimum-scale=\" + this.minimumScale);\n        }\n        if (this.width) {\n            components.push(\"width=\" + this.width);\n        }\n        if (this.height) {\n            components.push(\"height=\" + this.height);\n        }\n        return components.join(\", \");\n    }\n}\n","export class GesturesDetector {\n    constructor(window, listener) {\n        console.log(`Constructing Gesturesdetector for window ${window}`);\n        this.window = window;\n        this.listener = listener;\n        document.addEventListener(\"click\", (event) => {\n            console.log(\"onClick\");\n            this.onClick(event);\n        }, false);\n        /*document.addEventListener(\"DOMContentLoaded\", () => {\n          console.log(\"DOM content loaded\")\n        })*/\n    }\n    onClick(event) {\n        if (event.defaultPrevented) {\n            return;\n        }\n        const selection = this.window.getSelection();\n        if (selection && selection.type == \"Range\") {\n            // There's an on-going selection, the tap will dismiss it so we don't forward it.\n            // selection.type might be None (collapsed) or Caret with a collapsed range\n            // when there is not true selection.\n            return;\n        }\n        let nearestElement;\n        if (event.target instanceof HTMLElement) {\n            nearestElement = this.nearestInteractiveElement(event.target);\n        }\n        else {\n            nearestElement = null;\n        }\n        if (nearestElement) {\n            if (nearestElement instanceof HTMLAnchorElement) {\n                this.listener.onLinkActivated(nearestElement.href);\n            }\n        }\n        else {\n            console.log(\"tap detected\");\n            this.listener.onTap(event);\n        }\n        event.stopPropagation();\n        event.preventDefault();\n    }\n    // See. https://github.com/JayPanoz/architecture/tree/touch-handling/misc/touch-handling\n    nearestInteractiveElement(element) {\n        if (element == null) {\n            return null;\n        }\n        const interactiveTags = [\n            \"a\",\n            \"audio\",\n            \"button\",\n            \"canvas\",\n            \"details\",\n            \"input\",\n            \"label\",\n            \"option\",\n            \"select\",\n            \"submit\",\n            \"textarea\",\n            \"video\",\n        ];\n        if (interactiveTags.indexOf(element.nodeName.toLowerCase()) != -1) {\n            return element;\n        }\n        // Checks whether the element is editable by the user.\n        if (element.hasAttribute(\"contenteditable\") &&\n            element.getAttribute(\"contenteditable\").toLowerCase() != \"false\") {\n            return element;\n        }\n        // Checks parents recursively because the touch might be for example on an <em> inside a <a>.\n        if (element.parentElement) {\n            return this.nearestInteractiveElement(element.parentElement);\n        }\n        return null;\n    }\n}\n","import { computeScale } from \"../util/fit\";\nimport { PageManager } from \"./page-manager\";\nimport { ViewportStringBuilder } from \"../util/viewport\";\nimport { GesturesDetector } from \"../common/gestures\";\nexport class SingleAreaManager {\n    constructor(window, iframe, metaViewport, listener) {\n        this.fit = \"contain\" /* Fit.Contain */;\n        this.insets = { top: 0, right: 0, bottom: 0, left: 0 };\n        this.scale = 1;\n        const wrapperGesturesListener = {\n            onTap: (event) => {\n                var _a, _b, _c;\n                console.log(`metaViewport ${metaViewport.content}`);\n                const docElement = window.document.documentElement;\n                console.log(`docElement ${docElement.scrollLeft} ${docElement.scrollTop}`);\n                console.log(`scale ${(_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.scale}`);\n                console.log(`visualviewport ${(_b = window.visualViewport) === null || _b === void 0 ? void 0 : _b.width} ${(_c = window.visualViewport) === null || _c === void 0 ? void 0 : _c.height}`);\n                const tapEvent = {\n                    x: (event.clientX * this.scale) /\n                        (window.visualViewport.scale * this.scale),\n                    y: (event.clientY * this.scale) /\n                        (window.visualViewport.scale * this.scale),\n                };\n                listener.onTap(tapEvent);\n            },\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            onLinkActivated: (_) => {\n                throw Error(\"No interactive element in the root document.\");\n            },\n        };\n        new GesturesDetector(window, wrapperGesturesListener);\n        this.metaViewport = metaViewport;\n        const pageListener = {\n            onIframeLoaded: () => {\n                this.onIframeLoaded();\n            },\n            onTap: (event) => {\n                var _a, _b, _c;\n                const docElement = window.document.documentElement;\n                console.log(`docElement ${docElement.scrollLeft} ${docElement.scrollTop}`);\n                console.log(`scale ${(_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.scale}`);\n                console.log(`visualviewport ${(_b = window.visualViewport) === null || _b === void 0 ? void 0 : _b.width} ${(_c = window.visualViewport) === null || _c === void 0 ? void 0 : _c.height}`);\n                const boundingRect = iframe.getBoundingClientRect();\n                console.log(`boundingRect $} ${boundingRect.left} ${boundingRect.top}`);\n                const tapEvent = {\n                    x: ((event.x + boundingRect.left) * this.scale) /\n                        (window.visualViewport.scale * this.scale),\n                    y: ((event.y + boundingRect.top) * this.scale) /\n                        (window.visualViewport.scale * this.scale),\n                };\n                listener.onTap(tapEvent);\n            },\n            onLinkActivated: (href) => {\n                listener.onLinkActivated(href);\n            },\n        };\n        this.page = new PageManager(window, iframe, pageListener);\n    }\n    setViewport(viewport, insets) {\n        if (this.viewport == viewport && this.insets == insets) {\n            return;\n        }\n        this.viewport = viewport;\n        this.insets = insets;\n        this.layout();\n    }\n    setFit(fit) {\n        if (this.fit == fit) {\n            return;\n        }\n        this.fit = fit;\n        this.layout();\n    }\n    loadResource(url) {\n        this.page.hide();\n        this.page.loadPage(url);\n    }\n    onIframeLoaded() {\n        if (!this.page.size) {\n            // FIXME: raise error\n        }\n        else {\n            this.layout();\n        }\n    }\n    layout() {\n        if (!this.page.size || !this.viewport) {\n            return;\n        }\n        const margins = {\n            top: this.insets.top,\n            right: this.insets.right,\n            bottom: this.insets.bottom,\n            left: this.insets.left,\n        };\n        this.page.setMargins(margins);\n        const safeDrawingSize = {\n            width: this.viewport.width - this.insets.left - this.insets.right,\n            height: this.viewport.height - this.insets.top - this.insets.bottom,\n        };\n        const scale = computeScale(this.fit, this.page.size, safeDrawingSize);\n        this.metaViewport.content = new ViewportStringBuilder()\n            .setInitialScale(scale)\n            .setMinimumScale(scale)\n            .setWidth(this.page.size.width)\n            .setHeight(this.page.size.height)\n            .build();\n        this.scale = scale;\n        this.page.show();\n    }\n}\n","export function computeScale(fit, content, container) {\n    switch (fit) {\n        case \"contain\" /* Fit.Contain */:\n            return fitContain(content, container);\n        case \"width\" /* Fit.Width */:\n            return fitWidth(content, container);\n        case \"height\" /* Fit.Height */:\n            return fitHeight(content, container);\n    }\n}\nfunction fitContain(content, container) {\n    const widthRatio = container.width / content.width;\n    const heightRatio = container.height / content.height;\n    return Math.min(widthRatio, heightRatio);\n}\nfunction fitWidth(content, container) {\n    return container.width / content.width;\n}\nfunction fitHeight(content, container) {\n    return container.height / content.height;\n}\n","export class BridgeGesturesAdapter {\n    constructor(gesturesApi) {\n        this.nativeApi = gesturesApi;\n    }\n    onTap(event) {\n        this.nativeApi.onTap(JSON.stringify(event));\n    }\n    onLinkActivated(href) {\n        this.nativeApi.onLinkActivated(href);\n    }\n}\n","//\n//  Copyright 2024 Readium Foundation. All rights reserved.\n//  Use of this source code is governed by the BSD-style license\n//  available in the top-level LICENSE file of the project.\n//\nimport { FixedSingleBridge } from \"./bridge/fixed-single-bridge\";\nconst iframe = document.getElementById(\"page\");\nconst metaViewport = document.querySelector(\"meta[name=viewport]\");\nwindow.singleArea = new FixedSingleBridge(window, iframe, metaViewport, window.gestures);\n","import { SingleAreaManager } from \"../fixed/single-area-manager\";\nimport { BridgeGesturesAdapter } from \"./fixed-gestures-bridge\";\nexport class FixedSingleBridge {\n    constructor(window, iframe, metaViewport, gestures) {\n        const listener = new BridgeGesturesAdapter(gestures);\n        this.manager = new SingleAreaManager(window, iframe, metaViewport, listener);\n    }\n    loadResource(url) {\n        this.manager.loadResource(url);\n    }\n    setViewport(viewporttWidth, viewportHeight, insetTop, insetRight, insetBottom, insetLeft) {\n        const viewport = { width: viewporttWidth, height: viewportHeight };\n        const insets = {\n            top: insetTop,\n            left: insetLeft,\n            bottom: insetBottom,\n            right: insetRight,\n        };\n        this.manager.setViewport(viewport, insets);\n    }\n    setFit(fit) {\n        if (fit != \"contain\" && fit != \"width\" && fit != \"height\") {\n            throw Error(`Invalid fit value: ${fit}`);\n        }\n        this.manager.setFit(fit);\n    }\n}\n"],"names":["PageManager","constructor","window","iframe","listener","this","margins","top","right","bottom","left","channel","MessageChannel","contentWindow","Error","addEventListener","onIframeLoaded","show","style","display","hide","setMargins","marginTop","marginLeft","marginBottom","marginRight","loadPage","url","src","setPlaceholder","size","width","height","viewport","document","querySelector","HTMLMetaElement","pageSize","parsePageSize","port1","onmessage","message","console","log","onMessageFromIframe","postMessage","port2","data","x","y","onTap","href","onLinkActivated","viewportMeta","regex","properties","Map","match","exec","content","set","parseFloat","get","ViewportStringBuilder","setInitialScale","scale","initialScale","setMinimumScale","minimumScale","setWidth","setHeight","build","components","push","join","GesturesDetector","event","onClick","defaultPrevented","selection","getSelection","type","nearestElement","target","HTMLElement","nearestInteractiveElement","HTMLAnchorElement","stopPropagation","preventDefault","element","indexOf","nodeName","toLowerCase","hasAttribute","getAttribute","parentElement","SingleAreaManager","metaViewport","fit","insets","_a","_b","_c","docElement","documentElement","scrollLeft","scrollTop","visualViewport","tapEvent","clientX","clientY","_","pageListener","boundingRect","getBoundingClientRect","page","setViewport","layout","setFit","loadResource","safeDrawingSize","container","widthRatio","heightRatio","Math","min","fitContain","fitWidth","fitHeight","computeScale","BridgeGesturesAdapter","gesturesApi","nativeApi","JSON","stringify","getElementById","singleArea","gestures","manager","viewporttWidth","viewportHeight","insetTop","insetRight","insetBottom","insetLeft"],"sourceRoot":""}